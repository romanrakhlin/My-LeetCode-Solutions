# https://leetcode.com/problems/plus-one/

"""
самое простое решение это максимально тупа преобразовывать
из заданного массива число потом добавлять к нему 1 и наконец
переобразовывать получившееся число снова в массив
ну и этот массив как результат время работы такого алгоритма
это O(2n) потому что у нас два цикла снача для создания числп
а потом создания массива то есть это O(n)
"""

class Solution:
    def from_list_to_int(self, arr):
        result = ""
        for i in arr:
            result += str(i)
        return int(result)
    
    def from_int_to_list(self, n):
        s = str(n)
        result = []
        for i in s:
            result.append(int(i))
        return result
    
    def plusOne(self, digits: List[int]) -> List[int]:
        result = self.from_list_to_int(digits) + 1
        return self.from_int_to_list(result)

"""
есть и еще одно очень интересное решение которое работает
немного быстрее а точнее в два раза быстрее
алгоритм устроен там мы перебираем число с конца
каждую итерациб делаем условие если текущий
элемент меьше девяти если меньше то добавляем к нему просто один
ну и возвращаем наш массив ведь добавить еденицу нужно только к одному
элементу а вот если текущее число равно 9 (больше оно быть не может
ведь в каждом элементы длинны 1) в таком случае мы ставим
текущий элемент на 0 ну и продолжаем работу цикла дальше ведь мы добавили
всего десяток но не увеличи само число на 1 поэтому
вывод сделаем только после того как цикл сработает
"""

def plusOne(self, digits):
    for i in range(len(digits) - 1, -1, -1):
        if digits[i] < 9:
            digits[i] += 1
            return digits
        digits[i] = 0
    return [1] + digits

